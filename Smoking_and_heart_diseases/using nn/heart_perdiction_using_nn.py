# -*- coding: utf-8 -*-
"""heart_perdiction_using_NN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WHK9HiMi3ecHay1mOtlElX7_CArtbB3z
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.layers import Input

df = pd.read_csv("/content/heart.data.csv")

df = df.drop(['Unnamed: 0'],axis = 1)
X = df.drop(['heart.disease'], axis=1)
y = df['heart.disease']

scaler = StandardScaler()
X = scaler.fit_transform(X)
y = scaler.fit_transform(y.values.reshape(-1, 1))

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = Sequential()
model.add(Input(shape=x_train.shape[1:]))
model.add(Dense(2, activation='relu'))
model.add(Dense(1, activation='linear'))

model.compile(optimizer = 'adam',loss = 'mean_squared_error')

history = model.fit(x_train, y_train, epochs=50, validation_data=(x_test, y_test))

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('Model loss')
plt.ylabel('Loss')
plt.xlabel('Epoch')
plt.legend(['Train', 'Validation'], loc='upper right')
plt.show()

model.summary()

for layer in model.layers:
    weights = layer.get_weights()
    if weights:
        print("Weights:", weights[0])
        print("Biases:", weights[1])

y_pred = model.predict(x_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)