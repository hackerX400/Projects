# -*- coding: utf-8 -*-
"""heart_prediction_using_linear_Reg.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QbPOuJFoiyiSz3Nn5Pr8wgP4YGCt7sSo
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import StandardScaler

df = pd.read_csv("/content/heart.data.csv")

df.head()

df.plot(kind='scatter', x='smoking', y='heart.disease', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)
plt.show()

df.plot(kind='scatter', x='biking', y='heart.disease', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)
plt.show()

df.info()

df.isnull().sum()

df = df.drop(['Unnamed: 0'],axis = 1)

X = df.drop(['heart.disease'], axis=1)
y = df['heart.disease']

scaler = StandardScaler()
X = scaler.fit_transform(X)
y = scaler.fit_transform(y.values.reshape(-1, 1))

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

lg = LinearRegression()
lg.fit(x_train, y_train)

lg.score(x_test,y_test)

print("Intercept:", lg.intercept_)
print("Coefficients:", lg.coef_)

y_pred = lg.predict(x_test)

plt.scatter(y_test, y_pred, s=32, alpha=0.8)
plt.xlabel('Actual Heart Disease (Scaled)')
plt.ylabel('Predicted Heart Disease (Scaled)')
plt.title('Actual vs. Predicted Values')
plt.gca().spines[['top', 'right']].set_visible(False)
plt.show()

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error:", mse)
print("R-squared:", r2)